{"version":3,"sources":["components/Header.js","components/Routes/Auth/LoginPage.js","components/Routes/Auth/RegisterPage.js","components/Sidebar.js","components/Routes/Dashboard.js","components/Routes/Auth/ProtectedRoute.js","components/Routes/FourZeroFour.js","components/Routes/InfoTables/EditsModal.js","components/Routes/InfoTables/DisplayTable.js","components/Routes/InfoTables/ProjectsTable.js","components/InputComponents/ProjectForm.js","components/Routes/InfoTables/TicketTable.js","components/InputComponents/TicketForm.js","components/Routes/InfoTables/UsersTable.js","components/InputComponents/UserForm.js","components/InputComponents/EditProject.js","components/InputComponents/EditTicket.js","components/InputComponents/EditUser.js","components/Routes/Auth/Settings.js","components/Routes/InfoTables/MyProjects.js","components/Routes/InfoTables/MyTickets.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","SearchAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","noWrap","search","searchIcon","margin","spacing","width","LoginPage","email","useRef","password","login","history","useHistory","useState","inputMissing","setInputMissing","incorrectInput","setIncorrectInput","useContext","UserContext","user","setUser","UsersListContext","usersList","setUsersList","ProjectContext","projects","setProjects","eventListener","useCallback","current","value","userInput","options","method","headers","body","JSON","stringify","fetch","then","response","json","resultUser","push","catch","err","console","log","useEffect","addEventListener","e","target","OPTIONS","results","id","onClick","ref","placeholder","required","type","action","Button","color","Link","RegisterPage","name","href","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentShift","Sidebar","useTheme","React","open","setOpen","isSubmitter","setIsSubmitter","getUsers","getTickets","accountType","CssBaseline","IconButton","aria-label","edge","clsx","Drawer","anchor","paper","firstName","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","withRouter","Paper","ProtectedRoute","Component","component","render","to","pathname","FourZeroFour","EditsModal","props","background","modal","counter","editArray","viewEditsPosition","exitHandler","style","top","y","left","x","height","map","edit","dateOfEdit","timeOfEdit","oldStatus","newStatus","oldPriority","newPriority","oldTicketType","newTicketType","oldUserAssigned","newUserAssigned","ticketEditor","editComment","table","minWidth","DisplayTable","project","ticket","selectedUser","isNull","rows","setRows","message","setMessage","ticketsAssigned","setTicketsAssigned","editButton","editsArray","viewEdits","setModal","EditProjectContext","setEditingProject","EditTicketContext","setEditingTicket","EditUserContext","setEditingUser","createProjectData","description","creator","usersAssigned","tickets","completedTickets","forEach","isComplete","projectName","projectDescription","createdBy","createTicketData","associatedProject","priority","userAssigned","submitter","comments","editsList","ticketName","ticketType","ticketSubmitter","goToEditItem","closeModal","goToEditHistory","getBoundingClientRect","ticketsArray","lastName","projectsAssigned","TableContainer","Table","size","row","TableHead","TableRow","TableCell","scope","align","length","ProjectTable","setProject","searchWord","setSearchWord","searchedTicketsArray","setSearchedTicketsArray","getProject","event","element","_id","dataset","projectid","tempArray","toUpperCase","includes","placeHolder","index","ticketLength","users","projectID","projectIndex","createData","onChange","TableBody","data-projectid","ProjectForm","submit","titleUsed","setTitleUsed","inputMissingState","callbackFunction","titleUsedTemp","undefined","projectInfo","removeEventListener","ticketIndex","TicketTable","setTicket","showCompleted","setShowCompleted","getTicketByIndex","projectindex","ticketindex","data-ticketindex","data-projectindex","TicketForm","loggedInAs","selectedProject","setSelectedProject","setTicketType","setPriority","setUserAssigned","nameUsed","setNameUsed","nameUsedTemp","meridiem","hour","minute","date","Date","currentDate","getMonth","getDate","getFullYear","getHours","getMinutes","currentTime","ticketInfo","isCompleted","dateSubmitted","timeSubmitted","UsersTable","getUserByID","userID","UserForm","canCreateProjects","canAssignUsers","setAccountType","emailUsed","setEmailUsed","emailUsedTemp","deleteProject","editingProject","setDescription","data","result","readOnly","completeButton","reopenButton","editingTicket","tempStatus","setTempStatus","defaultValue","editingUser","setFirstName","setLastName","setPassword","userInfo","userBody","Settings","passwordTag","setPasswordTag","userObject","setUserObject","changeSuccessful","setSuccessful","tempObject","createContext","EditsHistoryContext","App","editsHistory","setEditsHistory","Provider","exact","path","Dashboard","EditProject","EditTicket","EditUser","MyProjects","MyTickets","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5bce5ed.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n}));\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className='appBar'>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Ticket Hound\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react'\r\nimport { useRef, useEffect, useContext, useCallback, useState } from 'react'\r\nimport { UserContext, ProjectContext, UsersListContext } from '../../../App'\r\nimport { Button } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Link from '@material-ui/core/Link'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../../Auth.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LoginPage() {\r\n  const classes = useStyles();\r\n  const email = useRef();\r\n  const password = useRef();\r\n  const login = useRef();\r\n  const history = useHistory();\r\n  const [ inputMissing, setInputMissing ] = useState(false);\r\n  const [ incorrectInput, setIncorrectInput ] = useState(false);\r\n  const [ user, setUser ]  = useContext(UserContext);\r\n  const [ usersList, setUsersList ] = useContext(UsersListContext);\r\n  const [ projects, setProjects ] = useContext(ProjectContext)\r\n    \r\n  const eventListener = useCallback(() => {\r\n    setIncorrectInput(false); \r\n    let inputMissing = false;\r\n    if((email.current.value === '') || (password.current.value === '')) {\r\n      inputMissing = true;\r\n      setInputMissing(true);\r\n    } else {\r\n      inputMissing = false;\r\n      setInputMissing(false);\r\n    };\r\n\r\n    if(!inputMissing) {\r\n      const userInput = {\r\n        email: email.current.value,\r\n        password: password.current.value\r\n      };\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-type\": \"Application/json\"\r\n        },\r\n        body: JSON.stringify(userInput)\r\n      };\r\n      fetch('/login', options)\r\n      .then(response => response.json())\r\n      .then(resultUser => {   \r\n        setUser(resultUser.user);\r\n        history.push('/dashboard');\r\n      })\r\n      .catch(err => {\r\n        setIncorrectInput(true);\r\n        console.log(err);\r\n        history.push('/');\r\n      });\r\n    }\r\n  }, [ history, setUser ])\r\n\r\n  useEffect(() => {\r\n    email.current.addEventListener('change', e => {\r\n      email.current.value = e.target.value;\r\n    });\r\n    password.current.addEventListener('change', e => {\r\n      password.current.value = e.target.value;\r\n    });\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    login.current.addEventListener('click', eventListener);\r\n  }, [ eventListener ]);\r\n\r\n  //if user successfully logs in, grab the projects and usersList collections from the db and set projects and usersList state\r\n  useEffect(() => {\r\n    if(projects === null && (user)) {\r\n      const OPTIONS = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"Application/JSON\"\r\n        },\r\n        body: JSON.stringify({})\r\n      }\r\n      fetch('/projects', OPTIONS)\r\n      .then(response => response.json())\r\n      .then(results => {\r\n        setProjects(results)        \r\n      })\r\n      .catch(err => console.log(err));\r\n    }\r\n\r\n    if(usersList === null && (user)) {\r\n      const OPTIONS = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"Application/JSON\"\r\n        },\r\n        body: JSON.stringify({})\r\n      }\r\n      fetch('/users', OPTIONS)\r\n      .then(response => response.json())\r\n      .then(results => {\r\n        setUsersList(results);\r\n      })\r\n      .catch(err => console.log(err));\r\n    }\r\n  }, [ user, projects, setProjects, setUsersList, usersList ]);\r\n\r\n  function loginAdminDemo() {\r\n    const loginInfo = {\r\n      email: 'AdminTestingUser@yahoo.com',\r\n      password: '123456'\r\n    }\r\n    const OPTIONS = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"Application/JSON\"\r\n      },\r\n      body: JSON.stringify(loginInfo)\r\n    }\r\n    fetch('/login', OPTIONS)\r\n    .then(response => response.json())\r\n    .then(resultUser => {   \r\n      setUser(resultUser.user);\r\n      history.push('/dashboard');\r\n    })\r\n    .catch(err => {\r\n      setIncorrectInput(true);\r\n      console.log(err);\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  function loginManagerDemo() {\r\n    const loginInfo = {\r\n      email: 'ProjectManager@yahoo.com',\r\n      password: '123456'\r\n    }\r\n    const OPTIONS = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"Application/JSON\"\r\n      },\r\n      body: JSON.stringify(loginInfo)\r\n    }\r\n    fetch('/login', OPTIONS)\r\n    .then(response => response.json())\r\n    .then(resultUser => {   \r\n      setUser(resultUser.user);\r\n      history.push('/dashboard');\r\n    })\r\n    .catch(err => {\r\n      setIncorrectInput(true);\r\n      console.log(err);\r\n      history.push('/');\r\n    });\r\n    \r\n  };\r\n\r\n  function loginDeveloperDemo() {\r\n   const loginInfo = {\r\n      email: 'DeveloperUser@yahoo.com',\r\n      password: '123456'\r\n    }\r\n    const OPTIONS = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"Application/JSON\"\r\n      },\r\n      body: JSON.stringify(loginInfo)\r\n    }\r\n    fetch('/login', OPTIONS)\r\n    .then(response => response.json())\r\n    .then(resultUser => {   \r\n      setUser(resultUser.user);\r\n      history.push('/dashboard');\r\n    })\r\n    .catch(err => {\r\n      setIncorrectInput(true);\r\n      console.log(err);\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  function loginSubmitterDemo() {\r\n    const loginInfo = {\r\n      email: 'SubmitterTestUser@yahoo.com',\r\n      password: '123456'\r\n    }\r\n    const OPTIONS = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"Application/JSON\"\r\n      },\r\n      body: JSON.stringify(loginInfo)\r\n    }\r\n    fetch('/login', OPTIONS)\r\n    .then(response => response.json())\r\n    .then(resultUser => {   \r\n      setUser(resultUser.user);\r\n      history.push('/dashboard');\r\n    })\r\n    .catch(err => {\r\n      setIncorrectInput(true);\r\n      console.log(err);\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  function goToRegister() {\r\n    history.push('/registerPage');\r\n  };\r\n\r\n  return (\r\n    <div className='isCentered'>\r\n    <div className=\"formParent\">\r\n\r\n        <div>\r\n          <div className=\"splashMessage\">Demo an Account Type</div> <br/>\r\n          <div id='userImageDiv'> \r\n            <div className='accountTypeText' onClick={loginAdminDemo}>Admin</div>\r\n            <div className='accountTypeText' onClick={loginManagerDemo}>Project Mgr.</div>\r\n            <div className='accountTypeText' onClick={loginDeveloperDemo}>Developer</div>\r\n            <div className='accountTypeText' onClick={loginSubmitterDemo}>Submitter</div>\r\n          </div>\r\n \r\n          <span className=\"smallText\">Or Login/Register</span>\r\n        </div>\r\n     \r\n      <form>\r\n        <input className='inputField' ref={email} placeholder='Email *' required/>\r\n        <input className='inputField' ref={password} placeholder='Password *' type='password' action='submit' required/>\r\n\r\n        { incorrectInput ? \r\n          <div className='errorMessage'>*Email or Password is incorrect*</div>\r\n        :\r\n          null\r\n        }\r\n\r\n        { inputMissing ? \r\n          <div className='errorMessage'>*Please provide both Email and Password*</div>\r\n        :\r\n          null\r\n        }\r\n\r\n        <Button className='addNewButton authButton' ref={login} variant=\"contained\" color=\"primary\">Login</Button>\r\n      </form> \r\n      <Typography className={classes.root}>\r\n        <Link onClick={() => goToRegister()}>\r\n          Register\r\n        </Link>\r\n      </Typography>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport '../../Auth.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction RegisterPage() {\n  const classes = useStyles();\n\n  return (\n    <div className='isCentered'>\n    <div className='formParent'>\n      <Typography>\n        <span>\n          <span className=\"splashMessage\">Welcome to Ticket Hound!</span> <br/> <br/>\n          <span className=\"smallText\">Please Login</span>\n        </span>\n      </Typography>\n      <form action='/register' method='POST'>\n        <input className='inputField' name='firstName' placeholder='First Name *' required/>\n        <input className='inputField' name='lastName' placeholder='Last Name *' required/>\n        <input className='inputField' name='email' placeholder='Email *' required/>\n        <input className='inputField' name='password' placeholder='Password *' type='password' required/>\n        <Button className='addNewButton authButton' variant=\"contained\" color=\"primary\" type='submit'>Register</Button>\n      </form>\n      <Typography className={classes.root}>\n        <Link href='/'>\n          Login\n        </Link>\n      </Typography>\n    </div>\n    </div>\n  )\n}\n\nexport default RegisterPage\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport clsx from 'clsx';\r\n//Icon imports\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../App';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction Sidebar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const history = useHistory();\r\n  const [ user ] = useContext(UserContext);\r\n  const [ isSubmitter, setIsSubmitter ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(user.accountType === 'Submitter') {\r\n      setIsSubmitter(true);\r\n    };\r\n  }, [ user.accountType ]);\r\n\r\n  function logout() {\r\n    const OPTIONS = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"Application/JSON\"\r\n      },\r\n      body: JSON.stringify({})\r\n    }\r\n    fetch('/logout', OPTIONS)\r\n    .then(() => {\r\n      history.push('/');\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n//Click handlers for sidebar nav buttons\r\n  function getDashboard() {\r\n    history.push('/dashboard');\r\n  };\r\n  function getProjects() {\r\n    if((user.accountType === 'Admin') || (user.accountType === 'Project Manager')) {\r\n      history.push('/projects');\r\n    } else {\r\n      history.push('/myProjects');\r\n    }\r\n  };\r\n  function getUsers() {\r\n    history.push('/users');\r\n  };\r\n  function getTickets() {\r\n    if(user.accountType === 'Developer') {\r\n      history.push('/myTickets');\r\n    } else {\r\n      history.push('/tickets');\r\n    }\r\n    \r\n  };\r\n\r\n  function getSettings() {\r\n    history.push('/settings');\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className='appBar'\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Ticket Hound\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n     \r\n      <Drawer\r\n        className={classes.drawer}\r\n        id='sidebarDrawer'\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: 'sidebarList',\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader} id='helloUser'>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Hello, {user.firstName}\r\n            </Typography>\r\n          </Toolbar>\r\n          <IconButton id='sidebarIcon' onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider className='sidebarDivider'/>\r\n        \r\n        <List>\r\n          <ListItem button className=\"sidebarText\" key={'Dashboard'} onClick={getDashboard}>\r\n            <ListItemIcon><DashboardIcon className=\"sidebarButton\" /></ListItemIcon>\r\n            <ListItemText primary={'Dashboard'} />\r\n          </ListItem>\r\n        \r\n        { user.accountType === 'Admin' ? \r\n          <ListItem button  className=\"sidebarText\"key={'Manage Users'} onClick={getUsers}>\r\n            <ListItemIcon><PeopleAltIcon className=\"sidebarButton\" /></ListItemIcon>\r\n            <ListItemText primary={'Manage Users'} />\r\n          </ListItem>\r\n        : \r\n          <ListItem button className=\"sidebarText\" key={'View Users'} onClick={getUsers}>\r\n          <ListItemIcon><SupervisedUserCircleIcon className=\"sidebarButton\" /></ListItemIcon>\r\n          <ListItemText primary={'View Users'} />\r\n          </ListItem> \r\n        }\r\n        { !isSubmitter ?\r\n          <ListItem button className=\"sidebarText\" key={'View Projects'} onClick={getProjects}>\r\n            <ListItemIcon><FolderIcon className=\"sidebarButton\" /></ListItemIcon>\r\n            <ListItemText primary={'View Projects'} />\r\n          </ListItem>\r\n        :\r\n          null\r\n        }\r\n\r\n        { user.accountType === 'Admin' ? \r\n          <ListItem button className=\"sidebarText\" key={'Manage Tickets'} onClick={getTickets}>\r\n            <ListItemIcon><BugReportIcon className=\"sidebarButton\" /></ListItemIcon>\r\n            <ListItemText primary={'Manage Tickets'} />\r\n          </ListItem>\r\n        : \r\n          null\r\n        }\r\n\r\n        { ((user.accountType === 'Submitter') || (user.accountType === 'Project Manager')) ? \r\n          <ListItem button className=\"sidebarText\" key={'View Tickets'} onClick={getTickets}>\r\n            <ListItemIcon><BugReportIcon className=\"sidebarButton\" /></ListItemIcon>\r\n            <ListItemText primary={'View Tickets'} />\r\n          </ListItem>\r\n        : \r\n          null\r\n        }\r\n\r\n        { user.accountType === 'Developer' ? \r\n          <ListItem button className=\"sidebarText\" key={'My Tickets'} onClick={getTickets}>\r\n            <ListItemIcon><BugReportIcon className=\"sidebarButton\" /></ListItemIcon>\r\n            <ListItemText primary={'My Tickets'} />\r\n          </ListItem>\r\n        : \r\n          null\r\n        }\r\n    \r\n        </List>\r\n\r\n        <Divider className='sidebarDivider'/>\r\n\r\n        <List className='sidebarList'>\r\n          <ListItem button className=\"sidebarText\" key={'Settings'} onClick={getSettings}>\r\n            <ListItemIcon><SettingsIcon  className=\"sidebarButton\"/></ListItemIcon>\r\n            <ListItemText primary={'Settings'} />\r\n          </ListItem>\r\n          \r\n          <ListItem button className=\"sidebarText\" key={'Logout'} onClick={logout}>\r\n            <ListItemIcon><ExitToAppIcon className=\"sidebarButton\" /></ListItemIcon>\r\n            <ListItemText primary='Logout'/>\r\n          </ListItem>\r\n        </List>\r\n\r\n      </Drawer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar","import React, { useContext, useState, useEffect } from 'react'\r\nimport Sidebar from '../Sidebar'\r\nimport { withRouter, useHistory } from 'react-router-dom'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { UserContext } from '../../App';\r\n//Icon imports\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nfunction Dashboard() {\r\n  const [ user ] = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [ isSubmitter, setIsSubmitter ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(user.accountType === 'Submitter') {\r\n      setIsSubmitter(true);\r\n    };\r\n  }, [ user.accountType ]);\r\n\r\n  function goToUsers() {\r\n    history.push('/users');\r\n  };  \r\n  function goToProjects() {\r\n    if((user.accountType === 'Admin') || (user.accountType === 'Project Manager')) {\r\n      history.push('/projects');\r\n    } else {\r\n      history.push('/myProjects');\r\n    }\r\n  };\r\n  function goToTickets() {\r\n    if((user.accountType === 'Admin') || (user.accountType === 'Project Manager') || (user.accountType === 'Submitter')) {\r\n      history.push('/tickets');\r\n    } else {\r\n      history.push('/myTickets');\r\n    }\r\n  };\r\n  function goToSettings() {\r\n    history.push('/settings');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <div className='dashboardTopBar'>\r\n        <h1 className='welcomeMessage'>Welcome to your { user.accountType } Dashboard!</h1>\r\n      \r\n        <div id='dashboardPage'>\r\n\r\n          <Paper className='gridItem'>\r\n            <div id='usersImage'>\r\n\r\n              <button className='sectionName addNewButton sectionButton vertical-center' onClick={goToUsers}><PeopleAltIcon className='padding-right-3rem'/> View Users</button>\r\n            </div>\r\n          </Paper>\r\n      \r\n          { !isSubmitter ? \r\n            <Paper className='gridItem'>\r\n              <div id='projectsImage'>\r\n                <button className='sectionName addNewButton sectionButton vertical-center' onClick={goToProjects}><FolderIcon className='padding-right-3rem' /> View Projects</button>\r\n              </div>\r\n            </Paper>\r\n          :\r\n            null\r\n          }\r\n      \r\n          <Paper className='gridItem'>\r\n            <div id='ticketsImage'>\r\n              <button className='sectionName addNewButton sectionButton vertical-center' onClick={goToTickets}><BugReportIcon className='padding-right-3rem' /> View Tickets</button>\r\n            </div>\r\n          </Paper>\r\n      \r\n          <Paper className='gridItem'>\r\n            <div id='settingsImage'>\r\n              <button className='sectionName addNewButton sectionButton vertical-center' onClick={goToSettings}><SettingsIcon className='padding-right-3rem' /> View Settings</button>\r\n            </div>\r\n          </Paper>\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Dashboard);","import React, { useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { UserContext } from '../../../App'\n\nfunction ProtectedRoute({ component: Component }) {\n  const [ user ] = useContext(UserContext);\n  return (\n    <Route \n      render={() => {\n        if(user !== null) {\n          console.log(\"authed from protected route\")\n          return <Component />;\n        } else {\n          console.log(\"Not authed from protected route\");\n          return <Redirect to={{ pathname: '/'}} />\n        }\n    }}/>\n  )\n}\n\nexport default ProtectedRoute\n","import React from 'react'\n\nfunction FourZeroFour() {\n  return (\n    <div className='errorPage'>\n      <h1 className='errorH1'>Error 404: Page does not exist.</h1>\n    </div>\n  )\n}\n\nexport default FourZeroFour\n","import React, { useRef, useEffect } from 'react'\n\n\nfunction EditsModal(props) {\n  const background = useRef();\n  const modal = useRef();\n  const counter = useRef(0);\n  const { editArray, viewEditsPosition, exitHandler } = props;\n  \n  useEffect(() => {\n    modal.current.style.position = 'fixed';\n    modal.current.style.top = `${viewEditsPosition.y - 300}px`;\n    modal.current.style.left = `${viewEditsPosition.x}px`;\n    modal.current.style.height = '300px';\n    modal.current.style.transition = 'height .4s';\n   \n  }, [ modal, editArray, viewEditsPosition.y, viewEditsPosition.x ])\n \n\n  return (\n    <div>\n      <div ref={background} id='modalDivParent' onClick={exitHandler}></div>\n    \n      <div ref={modal} id='modalDiv'>\n        <div></div>\n        <h3>Ticket Edit History</h3>\n        <ul className='editsUL'>\n        {editArray.map(edit => (\n          <div  key={edit.dateOfEdit+edit.timeOfEdit+counter.current++} className='editsLI'>\n          <li>Date: {edit.dateOfEdit}</li> \n          <li>Time: {edit.timeOfEdit}</li>\n          { edit.oldStatus !== edit.newStatus ? \n            <li><span className='change'>Completion</span> changed from <span className='change'>'{ edit.oldStatus === true ? 'Complete' : 'Not Complete' }'</span> to <span className='change'>'{ edit.newStatus === true ? 'Complete' : 'Not Complete' }'</span></li>\n          :\n            null\n          }\n\n          { edit.oldPriority !== edit.newPriority ? \n            <li><span className='change'>Priority</span> changed from <span className='change'>'{edit.oldPriority}'</span> to <span className='change'>'{edit.newPriority}'</span></li>\n          :\n            null\n          }\n\n          { edit.oldTicketType !== edit.newTicketType ? \n            <li><span className='change'>Ticket Type</span> changed from <span className='change'>'{edit.oldTicketType}'</span> to <span className='change'>'{edit.newTicketType}'</span></li>\n          :\n            null\n          }\n\n          { edit.oldUserAssigned !== edit.newUserAssigned ? \n            <li><span className='change'>User Assigned</span> changed from <span className='change'>'{edit.oldUserAssigned}'</span> to <span className='change'>'{edit.newUserAssigned}'</span></li>\n          :\n            null\n          }\n          <li>Ticket Editor: <span className='change'>{edit.ticketEditor}</span></li>\n          <li>Comments Made: <span className='change'>{edit.editComment}</span></li>\n          </div>\n        ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default EditsModal\n","import React, { useEffect, useState, useRef, useContext } from 'react'\nimport EditsModal from './EditsModal';\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { EditProjectContext, EditTicketContext, EditUserContext, ProjectContext, UserContext } from '../../../App';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n\nfunction DisplayTable(props) {\n  const classes = useStyles();\n  const { project, ticket, type, selectedUser, isNull } = props;\n  const [ rows, setRows ] = useState([]);\n  const [ message, setMessage ] = useState(`Select \"View ${type}\" to see details.`);\n  const [ ticketsAssigned, setTicketsAssigned ] = useState(null);\n  const history = useHistory();\n  const editButton = useRef();\n  const editsArray = useRef([]);\n  const viewEdits = useRef();\n  const [ modal, setModal ] = useState(null);\n  const [ , setEditingProject ] = useContext(EditProjectContext);\n  const [ , setEditingTicket ] = useContext(EditTicketContext);\n  const [ , setEditingUser ] = useContext(EditUserContext);\n  const [ projects ] = useContext(ProjectContext); \n  const [ user ] = useContext(UserContext);\n\n  useEffect(() => {\n    if((type === 'User') && (!isNull)) {\n      let ticketsArray = [];\n      projects.forEach(project => {\n        project.tickets.forEach(ticket => {\n          if(ticket.userAssigned === selectedUser.email) {\n            ticketsArray.push(ticket);\n          }\n        });\n      }); \n      if(ticketsArray[0]) {\n        setTicketsAssigned(ticketsArray);\n      } else {\n        setTicketsAssigned(null);\n      }\n    }\n  }, [ selectedUser, projects, isNull, type ]);\n\n  useEffect(() => {\n    if(isNull && editButton.current) {\n      editButton.current.className = 'addNewButton editButtonGrey';\n    } else if(!isNull && editButton.current) {\n      editButton.current.className = 'addNewButton editButtonGreen';\n    }\n  }, [ project, ticket, user, isNull ])\n  \n  useEffect(() => {\n    if(project !== null) {\n      switch(type) {\n        case 'Project':\n          setRows([createProjectData( project.projectName, project.projectDescription, project.createdBy, project.usersAssigned, project.tickets )]);\n          break;\n        \n        case 'User':\n          if(selectedUser !== null) {\n            setRows([createUserData( selectedUser.firstName, selectedUser.lastName, selectedUser.email, selectedUser.accountType, selectedUser.projectsAssigned )]);\n          }\n          break;\n        \n        case 'Ticket':\n          if(ticket !== null) {\n            setRows([createTicketData( ticket.ticketName, ticket.associatedProject, ticket.description, ticket.ticketType, ticket.priority, ticket.userAssigned, ticket.ticketSubmitter, ticket.comments, ticket.isComplete, ticket.editsArray )]);\n          }\n          break;\n\n        default:\n\n          break;\n      }\n    }\n  }, [ project, ticket, selectedUser, type ]);\n\n  function createProjectData( name, description, creator, usersAssigned, tickets ) {\n    let completedTickets = 0;\n    tickets.forEach(ticket => {\n      if(ticket.isComplete) {\n        completedTickets++;\n      }\n    });\n    return {\n      projectName: name,\n      projectDescription: description,\n      createdBy: creator,\n      usersAssigned: usersAssigned,\n      tickets: tickets,\n      completedTickets: completedTickets\n    }\n  }\n\n  function createTicketData( name, associatedProject, description, type, priority, userAssigned, submitter, comments, isComplete, editsList ) {\n    editsArray.current = editsList;\n    return {\n      ticketName: name,\n      associatedProject: associatedProject,\n      description: description,\n      ticketType: type,\n      priority: priority,\n      userAssigned: userAssigned,\n      ticketSubmitter: submitter,\n      comments: comments,\n      isComplete: isComplete,\n      editsList: editsList\n    };\n  };\n\n  function createUserData( firstName, lastName, email, accountType, projectsAssigned ) {\n    return {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      accountType: accountType,\n      projectsAssigned: projectsAssigned\n    };\n  };\n\n  function goToEditItem() {\n    switch(type) {\n      case 'Project':\n        setEditingProject(project);\n        break;\n      case 'Ticket':\n        setEditingTicket(ticket);\n        break;\n      case 'User':\n        setEditingUser(selectedUser);\n        break;\n      default:\n        break;\n    }\n    if(!isNull) {\n      history.push(`/edit${type}`);\n    } else {\n      setMessage(`No ${type} Selected.. Please \"View ${type}\" to edit.`);\n    }\n  };\n\n  function closeModal() {\n    setModal(null);\n  }\n  function goToEditHistory() {\n    const viewEditsPosition = viewEdits.current.getBoundingClientRect();\n    setModal(<EditsModal editArray={editsArray.current} viewEditsPosition={viewEditsPosition} exitHandler={closeModal}/>);\n  };\n\n  return(\n    <div className='displayTable'>\n      { modal !== null ? modal : null }\n      { ((type === 'User') && (user !== null) && (user.accountType === 'Admin')) ?\n        <div className='sectionBottomBar sectionTopBar'>\n          <button \n          className='addNewButton editButtonGrey'\n          ref={editButton}\n          onClick={goToEditItem}>\n          Edit {type}\n          </button>\n        </div>\n      :\n        <div>\n          { type === 'User' ? \n            <div className='sectionBottomBar sectionTopBar'/>\n          :\n            null\n          }\n        </div>\n      }\n\n      { ((type === 'Ticket') && ((user.accountType === 'Project Manager') || (user.accountType === 'Admin') || (user.accountType === 'Developer'))) ?\n        <div className='sectionBottomBar sectionTopBar'>\n          <button \n          className='addNewButton editButtonGrey'\n          ref={editButton}\n          onClick={goToEditItem}>\n          Edit {type}\n          </button>\n        </div>\n      :\n      <div>\n        { type === 'Ticket' ? \n          <div className='sectionBottomBar sectionTopBar'/>\n        :\n          null\n        }\n      </div>\n      }\n\n      { ((type === 'Project') && ((user.accountType === 'Project Manager') || (user.accountType === 'Admin'))) ?\n        <div className='sectionBottomBar sectionTopBar'>\n          <button \n          className='addNewButton editButtonGrey'\n          ref={editButton}\n          onClick={goToEditItem}>\n          Edit {type}\n          </button>\n        </div>\n      :\n      <div>\n        { type === 'Project' ? \n          <div className='sectionBottomBar sectionTopBar'/>\n        :\n          null\n        }\n      </div>\n      }\n        \n\n        <TableContainer className='tableContainer' component={Paper}>\n              \n          { (type === 'Project') && (project !== null) ? \n\n          <Table size='medium' className={classes.table} aria-label=\"simple table\">\n            {rows.map(row => (\n            <TableHead key={row.projectName}>\n              <TableRow>\n                <TableCell className='borderRight noWrap itemHeader topLeftCell' component=\"th\" scope=\"row\" align=\"left\">Project Name</TableCell>\n                <TableCell className='itemInfo noWrap topCell' align=\"left\">{row.projectName}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='greyCell noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Description</TableCell>\n                <TableCell className='greyCell noWrap itemInfo' align=\"left\">{row.projectDescription}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='borderRight noWrap itemHeader' component=\"th\" scope=\"row\" align=\"left\">Created By</TableCell>\n                <TableCell className='itemInfo noWrap' align=\"left\">{row.createdBy}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='greyCell noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Users Assigned</TableCell>\n                \n                { row.usersAssigned[0] ? \n                  <TableCell className='greyCell noWrap itemInfo' align=\"left\">\n                    {row.usersAssigned.map(user => (\n                      <span key={user}>{user} <br/></span>\n                    ))}\n                  </TableCell>\n                :\n                  <TableCell className='greyCell noWrap itemInfo'>No users assigned.</TableCell>\n                }\n\n              </TableRow>\n              <TableRow>\n                <TableCell className='borderRight noWrap itemHeader' component=\"th\" scope=\"row\" align=\"left\">Tickets Completed</TableCell>\n                <TableCell className='itemInfo noWrap' align=\"left\">{row.completedTickets} / {row.tickets.length}</TableCell>\n              </TableRow>\n            </TableHead>\n              ))}\n            </Table>\n          : \n            null\n          }   \n                  { (type === 'Project') && (project === null) ? \n                    <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell align=\"center\"><h2>{message}</h2></TableCell>\n                      </TableRow>\n                    </TableHead> \n                    </Table>\n                  :\n                    null\n                  }\n\n          { (type === 'Ticket') && (ticket !== null) ? \n            <Table size='medium' className={classes.table} aria-label=\"simple table\">\n            {rows.map(row => (\n            <TableHead key={row.ticketName}>\n              <TableRow>\n                <TableCell className='noWrap borderRight itemHeader topLeftCell' component=\"th\" scope=\"row\" align=\"left\">Ticket Name</TableCell>\n                <TableCell className='noWrap itemInfo topCell' align=\"left\">{row.ticketName}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='greyCell noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Project</TableCell>\n                <TableCell className='greyCell noWrap itemInfo' align=\"left\">{row.associatedProject}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Description</TableCell>\n                <TableCell className='noWrap itemInfo' align=\"left\">{row.description}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='greyCell noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Type</TableCell>\n                <TableCell className='greyCell noWrap itemInfo' align=\"left\">{row.ticketType}</TableCell>\n              </TableRow>\n\n              { row.priority === 'Low' ?\n                <TableRow>\n                  <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Priority</TableCell>\n                  <TableCell className='noWrap itemInfo priorityLow' align=\"left\">{row.priority}</TableCell>\n                </TableRow>\n              :\n                null\n              }\n              { row.priority === 'Medium' ?\n                <TableRow>\n                  <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Priority</TableCell>\n                  <TableCell className='noWrap itemInfo priorityMedium' align=\"left\">{row.priority}</TableCell>\n                </TableRow>\n              :\n                null\n              }  \n              { row.priority === 'High' ?\n                <TableRow>\n                  <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Priority</TableCell>\n                  <TableCell className='noWrap itemInfo priorityHigh' align=\"left\">{row.priority}</TableCell>\n                </TableRow>\n              :\n                null\n              }\n              { row.userAssigned ? \n                <TableRow>\n                  <TableCell className='noWrap greyCell borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">User Assigned</TableCell>\n                  <TableCell className='noWrap greyCell itemInfo' align=\"left\">{row.userAssigned}</TableCell>\n                </TableRow>\n              :\n                <TableRow>\n                  <TableCell className='noWrap greyCell borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">User Assigned</TableCell>\n                  <TableCell className='noWrap greyCell itemInfo' align=\"left\">No user assigned.</TableCell>\n                </TableRow>\n              }\n              <TableRow>\n                <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Submitter</TableCell>\n                <TableCell className='noWrap itemInfo' align=\"left\">{row.ticketSubmitter}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='noWrap greyCell borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Comments</TableCell>\n                <TableCell className='noWrap greyCell itemInfo' align=\"left\">{row.comments}</TableCell>\n              </TableRow>\n\n              { row.isComplete ? \n                <TableRow>\n                  <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Complete</TableCell>\n                  <TableCell className='noWrap itemInfo priorityLow' align=\"left\">Yes</TableCell>\n                </TableRow>\n              :\n                <TableRow>\n                  <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Complete</TableCell>\n                  <TableCell className='noWrap itemInfo priorityMedium' align=\"left\">No</TableCell>\n                </TableRow>\n              }\n      \n              <TableRow> \n                <TableCell className='noWrap greyCell borderRight itemHeader'>Edit History ({(row.editsList) && (row.editsList[0]) ? <span>{row.editsList.length}</span> : '0'})</TableCell>\n                <TableCell ref={viewEdits} className='noWrap greyCell itemInfo'><button className='viewButton' onClick={goToEditHistory}>View Edit History</button></TableCell>\n              </TableRow>\n\n            </TableHead>\n              ))}\n            </Table>\n          :\n            null\n          }    \n\n                  { (type === 'Ticket') && (ticket === null) ? \n                    <Table>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell align=\"center\"><h2>{message}</h2></TableCell>\n                      </TableRow>\n                    </TableHead> \n                    </Table>\n                  :\n                    null\n                  }\n\n          { (type === 'User') && (selectedUser !== null) ? \n\n          <Table size='medium' className={classes.table} aria-label=\"simple table\">\n            {rows.map(row => (\n            <TableHead key={row.email}>\n              <TableRow>\n                <TableCell className='noWrap borderRight itemHeader topLeftCell' component=\"th\" scope=\"row\" align=\"left\">First Name</TableCell>\n                <TableCell className='noWrap itemInfo topCell' align=\"left\">{row.firstName}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='greyCell noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Last Name</TableCell>\n                <TableCell className='greyCell noWrap itemInfo' align=\"left\">{row.lastName}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Email</TableCell>\n                <TableCell className='noWrap itemInfo' align=\"left\">{row.email}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='greyCell noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Account Type</TableCell>\n                <TableCell className='greyCell noWrap itemInfo' align=\"left\">{row.accountType}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className='noWrap borderRight itemHeader' component=\"th\" scope=\"row\" align=\"left\">Tickets Assigned</TableCell>\n                \n                { (ticketsAssigned !== null) ? \n                <TableCell className='noWrap itemInfo'>{\n                  ticketsAssigned.map(ticket => (\n                    <span key={ticket.ticketName}>Ticket name: \"{ticket.ticketName}\" - Project: {ticket.associatedProject}<br/></span>\n                  ))\n                  }\n                </TableCell>\n                :\n                <TableCell className='noWrap itemInfo'>No Tickets Assigned.</TableCell> }\n                \n              </TableRow>\n            </TableHead>\n              ))}\n            </Table>\n          : \n            null\n          }\n                { (type === 'User') && (selectedUser === null) ? \n                  <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell align=\"center\"><h2>{message}</h2></TableCell>\n                    </TableRow>\n                  </TableHead> \n                  </Table>\n                :\n                  null\n                }\n        </TableContainer>       \n\n    </div>\n  )\n}\n\nexport default DisplayTable\n\n/*\n\n*/","import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { ProjectContext, UserContext } from '../../../App'\nimport Sidebar from '../../Sidebar'\nimport DisplayTable from './DisplayTable'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction ProjectTable() {\n  const [ projects ] = useContext(ProjectContext);\n  const [ user ] = useContext(UserContext);\n  const history = useHistory();\n  const classes = useStyles();\n  const [ rows, setRows ] = useState([]);\n  const [ project, setProject ] = useState(null);\n  const isNull = useRef(true);\n  const [ searchWord, setSearchWord ] = useState('');\n  const [ searchedTicketsArray, setSearchedTicketsArray ] = useState([]);\n\n  useEffect(() => {\n    let tempArray = [];\n    let isUser = false;\n    rows.forEach(row => {\n      if((searchWord !== '') && ((row.name.toUpperCase().includes(searchWord.toUpperCase())) || (isUser))) {\n        tempArray.push(row);\n      };\n    });\n    setSearchedTicketsArray(tempArray);\n  }, [ searchWord, setSearchWord, rows ]);\n\n  function createData( projectName, usersAssigned, ticketLength, completedTickets, id, index ) {\n    return { name: projectName, users: usersAssigned, tickets: ticketLength, completedTickets: completedTickets, projectID: id, projectIndex: index };\n  }\n\n  function goToProjectForm() {\n    history.push('/projectForm');\n  };\n\n  useEffect(() => {\n    let placeHolder = [];\n    if(projects !== null) {\n      projects.forEach((project, index) => {\n        let completedTickets = 0;\n        project.tickets.forEach(ticket => {\n          if(ticket.isComplete) {\n            completedTickets++;\n          }\n        });\n        placeHolder.push(createData(project.projectName, project.usersAssigned.length, project.tickets.length, completedTickets, project._id, index));\n        setRows(placeHolder);\n      })\n    }\n  }, [projects]);\n\n  //For displaying in DisplayTable component\n  function getProject(event) {\n    projects.forEach(element => {\n      if(element._id === event.target.dataset.projectid) {\n        isNull.current = false;\n        setProject(element);\n      };\n    });\n  };\n\n  function handleSearchBar(e) {\n    setSearchWord(e.target.value);\n  };\n\n  return (\n    <div>\n      <Sidebar />\n        <div className='sectionTopBar'>\n          <h2 className='sectionName'>Projects</h2>\n          <div id='searchBarDiv'>\n            <input id='searchBar' placeholder='Search...' onChange={handleSearchBar}/>\n          </div>\n          { ((user.accountType === 'Admin') || (user.accountType === 'Project Manager')) ?\n            <button className='addNewButton'\n            onClick={goToProjectForm}>\n            + Add New Project\n            </button>\n          :\n            null\n          } \n        </div>\n      { searchedTicketsArray[0] ? \n        <TableContainer className='tableContainer' component={Paper}>\n        <Table size='medium' className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className='minWidthCell topLeftCell' align='center'>View Details</TableCell>\n              <TableCell className='noWrap greyCell topCell'>Project Name</TableCell>\n              <TableCell className='noWrap topCell' align=\"center\">Users Assigned</TableCell>\n              <TableCell className='noWrap greyCell topCell' align=\"center\">Tickets Completed</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {searchedTicketsArray.map(row => (\n              <TableRow key={row.name}>\n                <TableCell className='tableCell minWidthCell' align='center' component=\"th\" scope=\"row\">\n                  <button className='noWrap viewButton' data-projectid={row.projectID} onClick={event => getProject(event)}>View Project</button>\n                </TableCell>\n                <TableCell className='noWrap greyCell' align=\"left\">{row.name}</TableCell>\n                <TableCell className='noWrap'align=\"center\">{row.users}</TableCell>\n                <TableCell className='noWrap greyCell' align=\"center\">{row.completedTickets}/{row.tickets}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      :\n\n      <TableContainer className='tableContainer' component={Paper}>\n      <Table size='medium' className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className='minWidthCell topLeftCell' align='center'>View Details</TableCell>\n            <TableCell className='noWrap greyCell topCell'>Project Name</TableCell>\n            <TableCell className='noWrap topCell' align=\"center\">Users Assigned</TableCell>\n            <TableCell className='noWrap greyCell topCell' align=\"center\">Tickets Completed</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell className='tableCell minWidthCell' align='center' component=\"th\" scope=\"row\">\n                <button className='noWrap viewButton' data-projectid={row.projectID} onClick={event => getProject(event)}>View Project</button>\n              </TableCell>\n              <TableCell className='noWrap greyCell' align=\"left\">{row.name}</TableCell>\n              <TableCell className='noWrap'align=\"center\">{row.users}</TableCell>\n              <TableCell className='noWrap greyCell' align=\"center\">{row.completedTickets}/{row.tickets}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    }\n\n    <DisplayTable project={project} type='Project' isNull={isNull.current}/>\n    </div>\n  )\n}\n\nexport default ProjectTable\n","import React from 'react'\nimport { useRef, useEffect, useState, useContext, useCallback } from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext, ProjectContext } from '../../App'\nimport '../Auth.css'\nimport Sidebar from '../Sidebar'\n\n//Material UI config\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction ProjectForm() {\n  const classes = useStyles();\n  const projectName = useRef();\n  const projectDescription = useRef();\n  const submit = useRef();\n  const [ titleUsed, setTitleUsed ] = useState(false);\n  const history = useHistory();\n  const [ user ] = useContext(UserContext);\n  const [ projects, setProjects ] = useContext(ProjectContext);\n  const [ inputMissingState, setInputMissing ] = useState(false);\n\n  useEffect(() => {\n    const fieldArray = [\n      projectName,\n      projectDescription,\n    ]\n\n    fieldArray.forEach(element => {\n      element.current.addEventListener('change', e => {\n        element.current = e.target.value;\n      });\n    });\n  }, [ projectName, projectDescription ]);\n\n  const callbackFunction = useCallback(() => {\n    let inputMissing = false;\n    let titleUsedTemp = false;\n    //make sure a value has been assigned to this before posting them\n    if((projectName.current === undefined) || (projectName.current === '') || (typeof(projectName.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n    if((projectDescription.current === undefined) || (projectDescription.current === '') || (typeof(projectDescription.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n\n    projects.forEach(project => {\n      if(project.projectName === projectName.current) {\n        titleUsedTemp = true;\n        setTitleUsed(true);\n      }\n    });\n\n    if(!inputMissing && !titleUsedTemp) {\n      const projectInfo = {\n        projectName: projectName.current,\n        projectDescription: projectDescription.current,\n        createdBy: user.email,\n        usersAssigned: []\n      };\n  \n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(projectInfo)\n      };\n      fetch('/projectForm', options)\n      .then(() => {\n        fetch('/projects')\n        .then(response => response.json())\n        .then(results => {\n          setProjects(results);\n          history.push('/projects');        \n        })\n        .catch(err => console.log(err));\n      })\n      .catch(err => {\n        console.log(err);\n        history.push('/projects');\n      });\n    }\n  }, [ projectName, projectDescription, user.email, history, projects, setProjects ]);\n\n  useEffect(() => {\n    const placeHolder = submit.current;\n    placeHolder.addEventListener('click', callbackFunction);\n      if(placeHolder !== null) {\n        return (() => {\n          placeHolder.removeEventListener('click', callbackFunction)\n        })\n      }\n  }, [ submit, callbackFunction ]);\n\n\n  return (\n    <div>\n    <Sidebar />\n    <div className='isCentered2'>\n\n      <div className='formParent wideForm'>\n        <Typography className='splashMessage'>\n          <span className=\"splashMessage\">Please fill out all required fields.</span> <br/>\n        </Typography>\n        <form id=\"projectForm\">\n          <input ref={projectName} className='inputField wideInputField' placeholder='Project Title *' required/>\n          <textarea ref={projectDescription} className='inputField wideInputField tallInput' placeholder=\"Description *\" required/>\n          { titleUsed ? <Typography className='errorMessage'>Title already used, please try another name.</Typography> : null }\n          { inputMissingState ? <Typography className='errorMessage'>Input is missing, please fill out required forms.</Typography> : null }\n          <Button ref={submit} className='addNewButton authButton' variant=\"contained\" color=\"primary\">Submit</Button>\n        </form>\n        <Typography className={classes.root}>\n          <Link onClick={() => history.push('/projects')}>\n            Cancel\n          </Link>\n        </Typography>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default ProjectForm\n","import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { ProjectContext } from '../../../App'\nimport DisplayTable from './DisplayTable';\nimport Sidebar from '../../Sidebar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(ticketName, project, description, type, priority, user, submitter, comments, isComplete, ticketIndex, projectIndex) {\n  return { ticketName: ticketName, associatedProject: project, description: description, ticketType: type, \n    priority: priority, userAssigned: user, ticketSubmitter: submitter, comments: comments, isComplete: isComplete, ticketIndex: ticketIndex, projectIndex: projectIndex };\n}\n\nfunction TicketTable() {\n  const [ projects ] = useContext(ProjectContext);\n  const classes = useStyles();\n  const history = useHistory();\n  const [ rows, setRows ] = useState([]);\n  const [ ticket, setTicket ] = useState(null);\n  const [ showCompleted, setShowCompleted ] = useState(false);\n  const isNull = useRef(true);\n  const [ searchWord, setSearchWord ] = useState('');\n  const [ searchedTicketsArray, setSearchedTicketsArray ] = useState([]);\n\n  useEffect(() => {\n    let tempArray = [];\n    if(projects !== null) {\n      projects.forEach((project, projectIndex) => {\n        project.tickets.forEach((ticket, ticketIndex) => {\n          tempArray = [ ...tempArray, createData(ticket.ticketName, ticket.associatedProject, ticket.description, ticket.ticketType, ticket.priority, ticket.userAssigned, ticket.ticketSubmitter, ticket.comments, ticket.isComplete, ticketIndex, projectIndex) ];\n          setRows(tempArray);\n        })\n      });\n    }\n  }, [ projects ]);\n  \n\n  useEffect(() => {\n    let tempArray = [];\n    rows.forEach(row => {\n      if((searchWord !== '') && ((row.ticketName.toUpperCase().includes(searchWord.toUpperCase())) || \n      ((row.associatedProject.toUpperCase().includes(searchWord.toUpperCase()))) ||\n      ((row.userAssigned.toUpperCase().includes(searchWord.toUpperCase()))) ||\n      ((row.priority.toUpperCase().includes(searchWord.toUpperCase()))))) {\n        tempArray.push(row);\n      };\n    });\n    setSearchedTicketsArray(tempArray);\n  }, [ searchWord, setSearchWord, rows ]);\n\n\n  //for displaying on the DisplayTable component\n  function getTicketByIndex(event) {\n    isNull.current = false;\n    setTicket(projects[event.target.dataset.projectindex].tickets[event.target.dataset.ticketindex]);\n  };\n\n  function handleShowCompleted() {\n    setShowCompleted(!showCompleted);\n  };\n\n  function goToTicketForm() {\n    history.push('/ticketForm');\n  };\n\n  function handleSearchBar(e) {\n    setSearchWord(e.target.value);\n  };\n\n  return (\n    <div>\n      <Sidebar />\n      \n        <div className='sectionTopBar'>\n          <h2 className='sectionName'>Tickets</h2>\n          <div id='checkBox'>\n            <input type='checkbox' name='showCompleted' onClick={handleShowCompleted}/>\n            <label>Show Completed</label>\n          </div>\n          <div id='searchBarDiv'>\n            <input id='searchBar' placeholder='Search...' onChange={handleSearchBar}/>\n          </div>\n            <button className='addNewButton'\n            onClick={goToTicketForm}>\n            + Add New Ticket\n            </button>\n        </div>\n\n      { searchedTicketsArray[0] ?\n      <TableContainer className='tableContainer' component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n\n        <TableHead>\n          <TableRow>\n            <TableCell className='noWrap minWidthCell topLeftCell' align=\"center\">View Details</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">Ticket Name</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">Project</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"center\">Priority</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">User Assigned</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding smallCell topCell' align=\"center\">Complete</TableCell>\n          </TableRow>\n        </TableHead>\n        \n        {searchedTicketsArray.map((row) => (\n        <TableBody key={row.ticketName}>\n        { showCompleted ? \n          <TableRow>\n             \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          :\n            null\n          }\n\n          { ((!showCompleted) && (!row.isComplete)) ? \n            <TableRow key={row.ticketName}>\n          \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          : null }\n\n            </TableBody>\n          ))}\n        \n        </Table>\n      </TableContainer>\n      :\n\n      <TableContainer className='tableContainer' component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className='noWrap minWidthCell topLeftCell' align=\"center\">View Details</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">Ticket Name</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">Project</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"center\">Priority</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">User Assigned</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding smallCell topCell' align=\"center\">Complete</TableCell>\n          </TableRow>\n        </TableHead>\n        \n        {rows.map((row) => (\n        <TableBody key={row.ticketName}>\n        { showCompleted ? \n          <TableRow>\n             \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          :\n            null\n          }\n\n          { ((!showCompleted) && (!row.isComplete)) ? \n            <TableRow key={row.ticketName}>\n          \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          : null }\n\n            </TableBody>\n          ))}\n\n      </Table>\n    </TableContainer>\n    }\n    \n    <DisplayTable ticket={ticket} type={'Ticket'} isNull={isNull.current}/>\n    </div>\n  )\n}\n\nexport default TicketTable\n","import React from 'react'\nimport { useRef, useEffect, useContext, useState, useCallback } from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory } from 'react-router-dom'\nimport { ProjectContext, UsersListContext, UserContext } from '../../App'\nimport '../Auth.css'\nimport Sidebar from '../Sidebar'\n\n//Material UI config\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction TicketForm() {\n  const classes = useStyles();\n  const ticketName = useRef();\n  const description = useRef();\n  const comments = useRef();\n  const submit = useRef();\n  const history = useHistory();\n  const [ projects, setProjects ] = useContext(ProjectContext);\n  const [ users ] = useContext(UsersListContext);\n  const [ loggedInAs ] = useContext(UserContext);\n  const [ selectedProject, setSelectedProject ] = useState();\n  const [ ticketType, setTicketType ] = useState();\n  const [ priority, setPriority ] = useState();\n  const [ userAssigned, setUserAssigned ] = useState();\n  const [ nameUsed, setNameUsed ] = useState(false);\n  const [ inputMissingState, setInputMissing ] = useState(false);\n  \n  useEffect(() => {\n    const fieldArray = [\n      ticketName,\n      description,\n      comments,\n    ]\n\n    fieldArray.forEach(element => {\n      element.current.addEventListener('change', e => {\n        element.current = e.target.value;\n      });\n    });\n  }, []);\n\n  const callbackFunction = useCallback(() => {\n    let inputMissing = false;\n    let nameUsedTemp = false;\n    //check all fields for valid values\n    if((comments.current === undefined) || (comments.current === \"\") || (typeof(comments.current) === 'object')) {\n      comments.current = ['Ticket submitted.'];\n    };\n    if((ticketName.current === undefined) || (ticketName.current === \"\") || (typeof(ticketName.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n    if((description.current === undefined) || (description.current === \"\") || (typeof(description.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n    if((ticketType === undefined) || (ticketType === \"\")) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n    if((priority === undefined) || (priority === \"\")) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n    if((userAssigned === undefined) || (userAssigned === \"\")) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n\n    projects.forEach(project => {\n      project.tickets.forEach(ticket => {\n        if(ticket.ticketName === ticketName.current) {\n          nameUsedTemp = true;\n          setNameUsed(true);\n        }\n      })\n    })\n\n    \n    if(!inputMissing && !nameUsedTemp) {\n      //getting date/time submitted\n      const date = new Date();\n      const currentDate = `${date.getMonth()+1}-${date.getDate()}-${date.getFullYear()}`;\n      let meridiem;\n      let hour;\n      if(date.getHours() > 12) {\n        hour = date.getHours() - 12;\n        meridiem = 'pm';\n      } else { \n        hour = date.getHours()\n        meridiem = 'am';\n      }\n      let minute;\n      if(date.getMinutes() < 10) {\n        minute = `0${date.getMinutes()}`;\n      }  else { \n        minute = date.getMinutes();\n       }\n\n      const currentTime = `${hour}:${minute}${meridiem}`\n      const ticketInfo = {\n        ticketName: ticketName.current,\n        description: description.current,\n        comments: comments.current,\n        isCompleted: false,\n        associatedProject: selectedProject,\n        ticketType: ticketType,\n        priority: priority,\n        userAssigned: userAssigned,\n        ticketSubmitter: loggedInAs.email,\n        dateSubmitted: currentDate,\n        timeSubmitted: currentTime\n      };\n      \n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(ticketInfo)\n      };\n\n      fetch('/ticketForm', options)\n      .then(() => {\n        fetch('/projects')\n        .then(response => response.json())\n        .then(results => {\n          setProjects(results)        \n        })\n        .catch(err => console.log(err));\n        history.push('/tickets');\n      })\n      .catch(err => {\n        console.log(err);\n        history.push('/tickets');\n      });\n    } else { history.push('/ticketForm') }\n  }, [ selectedProject, ticketType, priority, userAssigned, loggedInAs, history, projects, setProjects ]);\n\n  useEffect(() => {\n    const placeHolder = submit.current;\n    placeHolder.addEventListener('click', callbackFunction);\n    //Prevent multiple event listeners upon state change\n    if(placeHolder !== null) {\n     return (() => {\n      placeHolder.removeEventListener('click', callbackFunction);\n     })\n    }\n  }, [ submit, callbackFunction ]);\n\n\n  function handleAssociated(event) {\n    setSelectedProject(event.target.value)\n  };\n  function handleTicketType(event) {\n    setTicketType(event.target.value);\n  };\n  function handlePriority(event) {\n    setPriority(event.target.value);\n  };\n  function handleUserAssigned(event) {\n    setUserAssigned(event.target.value);\n  };\n\n  return (\n    <div>\n    <Sidebar />\n    <div className='isCentered2'>\n    \n      <div className='formParent wideForm'>\n        \n        <Typography className=\"splashMessage\">\n          <span className=\"splashMessage\">Please fill out all required fields.</span> <br/>\n        </Typography>\n\n        <form id=\"ticketForm\">\n          <input ref={ticketName} className='inputField' placeholder=\"Ticket Title *\" required/>\n\n              <select className='inputField' value={selectedProject} onChange={handleAssociated}>\n                <option value=\"\">Project *</option>\n                  {projects.map(project => (\n                    <option key={project._id} value={project.projectName}>{project.projectName}</option>\n                  ))}\n              </select>\n\n          <textarea ref={description} className='inputField wideInputField tallInput' placeholder=\"Description *\" required/>\n          \n              <select className='inputField' value={ticketType} onChange={handleTicketType}>\n                <option value=\"\">Ticket Type *</option>\n                <option value='Bug'>Bug</option>\n                <option value='Functionality'>Functionality</option>\n                <option value='Graphical'>Graphical</option>\n                <option value='Network'>Network</option>\n                <option value='Compatibility'>Compatibility</option>\n                <option value='Accessability'>Accessability</option>\n                <option value='Other'>Other</option>\n              </select>\n          \n              <select className='inputField' value={priority} onChange={handlePriority}>\n                <option value=\"\">Priority *</option>\n                <option value='Low'>Low</option>\n                <option value='Medium'>Medium</option>\n                <option value='High'>High</option>\n              </select>\n\n              <select className='inputField' value={userAssigned} onChange={handleUserAssigned}>\n                <option value=\"\">User Assigned *</option>\n                {users.map(user => (\n                    <option key={user.email} value={user.email}>{user.email}</option>\n                  ))}\n              </select>\n\n          <input ref={comments} className='inputField' placeholder=\"Comments\"/>\n          \n          <br/>\n          { nameUsed ? <Typography className='errorMessage'><span>Ticket name already used, please try another name.</span></Typography> : null }\n          { inputMissingState ? <Typography className='errorMessage'><span>Input is missing, please fill out required forms.</span></Typography> : null }\n\n          <Button ref={submit} className='addNewButton authButton'variant=\"contained\" color=\"primary\">Submit</Button>\n        </form>\n        <Typography className={classes.root}>\n          <Link onClick={() => history.push('/tickets')}>\n            Cancel\n          </Link>\n        </Typography>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default TicketForm\n","import React, { useContext, useState, useEffect, useRef } from 'react'\nimport { UsersListContext, UserContext } from '../../../App'\nimport DisplayTable from './DisplayTable';\nimport Sidebar from '../../Sidebar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useHistory } from 'react-router-dom'\nimport '../../Auth.css'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(firstName, lastName, email, accountType, projectsAssigned, id) {\n  return { firstName: firstName, lastName: lastName, email: email, accountType: accountType, projectsAssigned: projectsAssigned, userID: id };\n} \n\nfunction UsersTable() {\n  const [ usersList ] = useContext(UsersListContext);\n  const [ user ] = useContext(UserContext);\n  const history = useHistory();\n  const [ rows, setRows ] = useState([]);\n  const [ selectedUser, setUser ] = useState(null);\n  const isNull = useRef(true);\n  const [ searchWord, setSearchWord ] = useState('');\n  const [ searchedTicketsArray, setSearchedTicketsArray ] = useState([]);\n\n  useEffect(() => {\n    let tempArray = [];\n    rows.forEach(row => {\n      if((searchWord !== '') && ((row.firstName.toUpperCase().includes(searchWord.toUpperCase())) || \n      ((row.lastName.toUpperCase().includes(searchWord.toUpperCase()))) ||\n      ((row.email.toUpperCase().includes(searchWord.toUpperCase()))) ||\n      ((row.accountType.toUpperCase().includes(searchWord.toUpperCase()))))) {\n        tempArray.push(row);\n      };\n    });\n    setSearchedTicketsArray(tempArray);\n  }, [ searchWord, setSearchWord, rows ]);\n\n  useEffect(() => {\n    let tempArray = [];\n    if(usersList !== null) {\n      usersList.forEach(user => {\n        tempArray.push( createData(user.firstName, user.lastName, user.email, user.accountType, user.projectsAssigned, user._id) );\n        setRows(tempArray);\n      });\n    }\n  }, [ usersList ]);\n\n  function goToUserForm() {\n    history.push('/userForm');\n  };\n\n  //For displaying on the DisplayTable component\n  function getUserByID(event) {\n    usersList.forEach(user => {\n      if(user._id === event.target.id) {\n        isNull.current = false;\n        setUser(user);\n      };\n    });\n  };\n\n  function handleSearchBar(e) {\n    setSearchWord(e.target.value);\n  };\n  \n  const classes = useStyles();\n  return (\n    <div>\n       <Sidebar />\n\n       <div className='sectionTopBar'>\n          <h2 className='sectionName'>Users</h2>\n          <div id='searchBarDiv'>\n            <input id='searchBar' placeholder='Search...' onChange={handleSearchBar}/>\n          </div>\n\n          { user.accountType === 'Admin' ?\n            <button className='addNewButton'\n            onClick={goToUserForm}>\n            + Add New User\n            </button>\n          :\n            null\n          }\n          \n        </div>\n\n      { searchedTicketsArray[0] ? \n      \n      <TableContainer className='tableContainer' component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className='minWidthCell noWrap topLeftCell' align=\"center\">View Details</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">User</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">User Role</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">First Name</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">Last Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {searchedTicketsArray.map((row) => (\n            <TableRow key={row.email}>\n              <TableCell className='tableCell minWidthCell noWrap' align='center' scope=\"row\">\n                <button className='viewButton' id={row.userID} onClick={event => getUserByID(event)}>View User</button>\n              </TableCell>\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.email}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.accountType}</TableCell>\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.firstName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.lastName}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    :\n\n      <TableContainer className='tableContainer' component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className='minWidthCell noWrap topLeftCell' align=\"center\">View Details</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">User</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">User Role</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">First Name</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">Last Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.email}>\n              <TableCell className='tableCell minWidthCell noWrap' align='center' scope=\"row\">\n                <button className='viewButton' id={row.userID} onClick={event => getUserByID(event)}>View User</button>\n              </TableCell>\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.email}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.accountType}</TableCell>\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.firstName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.lastName}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n  }\n    \n    <DisplayTable selectedUser={selectedUser} type='User' isNull={isNull.current}/>\n    </div>\n  )\n}\n\nexport default UsersTable\n","import React from 'react'\nimport { useRef, useEffect, useState, useCallback, useContext } from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory } from 'react-router-dom'\nimport '../Auth.css'\nimport { UsersListContext } from '../../App'\nimport Sidebar from '../Sidebar'\n\n//Material UI config\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction UserForm() {\n  const classes = useStyles();\n  const firstName = useRef();\n  const lastName = useRef();\n  const email = useRef();\n  const password = useRef();\n  const canCreateProjects = useRef(false);\n  const canAssignUsers = useRef(false);\n  const submit = useRef();\n  const history = useHistory();\n  const [ accountType, setAccountType ] = useState();\n  const [ usersList, setUsersList ] = useContext(UsersListContext);\n  const [ emailUsed, setEmailUsed ] = useState(false);\n  const [ inputMissingState, setInputMissing ] = useState(false);\n\n  const eventListener = useCallback(() => {\n    //check all fields for valid values\n    let inputMissing = false;\n    let emailUsedTemp = false;\n    if((firstName.current === undefined) || (firstName.current === \"\") || (typeof(firstName.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n    if((lastName.current === undefined) || (firstName.current === \"\") || (typeof(lastName.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n    if((email.current === undefined) || (firstName.current === \"\") || (typeof(email.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n    if((password.current === undefined) || (firstName.current === \"\") || (typeof(password.current) === 'object')) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n    if((accountType === undefined) || (firstName.current === \"\")) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n    \n    usersList.forEach(user => {\n      if(user.email === email.current) {\n        emailUsedTemp = true;\n        setEmailUsed(true);\n      }\n    });\n\n    if(!inputMissing && !emailUsedTemp) {\n      //Assign permissions based on account type\n      switch(accountType) {\n        case 'Admin':\n          canCreateProjects.current = true;\n          canAssignUsers.current = true;\n          break;\n        case 'Project Manager':\n          canCreateProjects.current = false;\n          canAssignUsers.current = true;\n          break;\n        case 'Developer':\n          canCreateProjects.current = false;\n          canAssignUsers.current = false;\n          break;\n        case 'Submitter':\n          canCreateProjects.current = false;\n          canAssignUsers.current = false;\n          break;\n        default:\n          canCreateProjects.current = false;\n          canAssignUsers.current = false;\n          break;\n      }\n    \n      const projectInfo = {\n        firstName: firstName.current,\n        lastName: lastName.current,\n        email: email.current,\n        password: password.current,\n        accountType: accountType,\n        canCreateProjects: canCreateProjects.current,\n        canAssignUsers: canAssignUsers.current\n      };\n      \n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(projectInfo)\n      };\n      fetch('/userForm', options)\n      .then(() => {\n          fetch('/users')\n          .then(response => response.json())\n          .then(results => {\n            setUsersList(results);\n          })\n          .catch(err => console.log(err));\n            history.push('/users');\n          })\n      .catch(err => {\n        console.log(err);\n        history.push('/users');\n      });\n    }\n  }, [ accountType, firstName, lastName, email, password, history, usersList, setUsersList ]);\n\n  useEffect(() => {\n    const placeHolder = submit.current;\n    placeHolder.addEventListener('click', eventListener);\n    return () => {\n      //Prevent multiple event listeners upon state change\n      if(placeHolder !== null) {\n        placeHolder.removeEventListener('click', eventListener);\n      }\n    }\n  }, [ submit, eventListener ]);\n\n\n  const handleAccountType = (event) => {\n    setAccountType(event.target.value);\n  };\n  function setFirstName(e) {\n    firstName.current = e.target.value;\n  };\n  function setLastName(e) {\n    lastName.current = e.target.value;\n  };\n  function setEmail(e) {\n    email.current = e.target.value;\n  };\n  function setPassword(e) {\n    password.current = e.target.value;\n  };\n\n  return (\n    <div>\n    <Sidebar />\n    <div className='isCentered2'>\n    \n      <div className='formParent wideForm'>\n\n        <form id=\"userForm\">\n          <Typography className='splashMessage'>\n            <span className=\"splashMessage\">Please fill out all fields.</span> <br/>\n          </Typography>\n\n          <input name='firstName' className='inputField' placeholder=\"First Name *\" required onChange={setFirstName}/>\n          <input name='lastName' className='inputField' placeholder=\"Last Name *\" required onChange={setLastName}/>\n          <input name='email' className='inputField wideInputField' placeholder=\"Email *\" required onChange={setEmail}/>\n          <input name='password' type='password' className='inputField' placeholder=\"Password *\" required onChange={setPassword}/>\n              \n            <select className='inputField' value={accountType} onChange={handleAccountType}>\n              <option value=\"\">Account Type *</option>\n              <option value={'Admin'}>Admin</option>\n              <option value={'Project Manager'}>Project Manager</option>\n              <option value={'Developer'}>Developer</option>\n              <option value={'Submitter'}>Submitter</option>\n            </select>\n\n            { emailUsed ? <Typography className='errorMessage'><span>Email already used, please try another email.</span></Typography> : null }\n            { inputMissingState ? <Typography className='errorMessage'><span>Input is missing, please fill out required forms.</span></Typography> : null }\n\n          <Button ref={submit} className='addNewButton authButton' variant=\"contained\" color=\"primary\">Submit</Button>\n        </form>\n\n        <Typography className={classes.root}>\n          <Link onClick={() => history.push('/users')}>\n            Cancel\n          </Link>\n        </Typography>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default UserForm\n","import React from 'react'\nimport { useRef, useEffect, useState, useContext, useCallback } from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory } from 'react-router-dom'\nimport { UserContext, ProjectContext, EditProjectContext } from '../../App'\nimport Sidebar from '../Sidebar'\nimport '../Auth.css'\n\n//Material UI config\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction ProjectForm() {\n  const classes = useStyles();\n  const projectDescription = useRef();\n  const submit = useRef();\n  const deleteProject = useRef();\n  const history = useHistory();\n  const [ user ] = useContext(UserContext);\n  const [ , setProjects ] = useContext(ProjectContext);\n  const [ editingProject ] = useContext(EditProjectContext);\n  const [ inputMissingState, setInputMissing ] = useState(false);\n  const [ description, setDescription ] = useState(editingProject.projectDescription);\n\n  useEffect(() => {\n    projectDescription.current.addEventListener('change', e => {\n      setDescription(e.target.value);\n    });\n  }, [  projectDescription ]);\n\n  const callbackFunction = useCallback(() => {\n    let inputMissing = false;\n    //makes sure a value has been assigned to this before posting them\n    if((projectDescription.current === undefined) || (projectDescription.current === '')) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n\n    if(!inputMissing) {\n      const projectInfo = {\n        projectName: editingProject.projectName,\n        projectDescription: description,\n        user: user.email\n      };\n  \n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(projectInfo)\n      };\n      fetch('/editProject', options)\n      .then(() => {\n        fetch('/projects')\n        .then(response => response.json())\n        .then(results => {\n          setProjects(results);\n          history.push('/projects');        \n        })\n        .catch(err => console.log(err));\n      })\n      .catch(err => {\n        console.log(err);\n        history.push('/projects');\n      });\n    }\n  }, [ projectDescription, history, user.email, setProjects, description, editingProject.projectName ]);\n\n  useEffect(() => {\n    const placeHolder = deleteProject.current;\n    const data = {\n      projectName: editingProject.projectName\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"Application/JSON\"\n      },\n      body: JSON.stringify(data)\n    }\n\n    placeHolder.addEventListener('click', () => {\n      fetch('/deleteProject', options)\n      .then(() => {\n        fetch('/projects')\n        .then(result => result.json())\n        .then(projects => {\n          setProjects(projects);\n          history.push('/projects');\n        })\n        .catch(err => {\n          console.log(err);\n          history.push('/projects');\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    });\n  }, [ deleteProject, history, setProjects, editingProject.projectName ]);\n\n  useEffect(() => {\n    const placeHolder = submit.current;\n    placeHolder.addEventListener('click', callbackFunction);\n      if(placeHolder !== null) {\n        return (() => {\n          placeHolder.removeEventListener('click', callbackFunction)\n        })\n      }\n  }, [ submit, callbackFunction ]);\n\n  function handleDescription(event) {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n    <Sidebar />\n    <div className='isCentered2'>\n      <div className='formParent wideForm'>\n        <Typography className='splashMessage'>\n          <span className=\"splashMessage\">Edit Project</span> <br/>\n        </Typography>\n        <form id=\"editProjectForm\">\n\n          <input className='inputField wideInputField' value={editingProject.projectName} readOnly />\n          <textarea ref={projectDescription} className='inputField wideInputField tallInput' placeholder=\"Description *\" value={description} onChange={handleDescription} required/>\n          { inputMissingState ? <Typography className='errorMessage'>Input is missing, please fill out required forms.</Typography> : null }\n          <Button ref={deleteProject} className='addNewButton deleteButton authButton' variant='contained' color='primary'>Delete Project</Button>\n          <Button ref={submit} className='addNewButton authButton' variant=\"contained\" color=\"primary\">Save Changes</Button>\n        </form>\n        <Typography className={classes.root}>\n          <Link onClick={() => history.push('/projects')}>\n            Cancel\n          </Link>\n        </Typography>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default ProjectForm\n","import React from 'react'\nimport { useRef, useEffect, useContext, useState, useCallback } from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory } from 'react-router-dom'\nimport { ProjectContext, UsersListContext, UserContext, EditTicketContext } from '../../App'\nimport '../Auth.css'\nimport Sidebar from '../Sidebar'\n\n//Material UI config\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction TicketForm() {\n  const classes = useStyles();\n  const ticketName = useRef();\n  const description = useRef();\n  const comments = useRef();\n  const submit = useRef();\n  const completeButton = useRef();\n  const reopenButton = useRef();\n  const history = useHistory();\n  const [ , setProjects ] = useContext(ProjectContext);\n  const [ editingTicket ] = useContext(EditTicketContext);\n  const [ tempStatus, setTempStatus ] = useState(editingTicket.isComplete);\n  const [ user ] = useContext(UserContext);\n  const [ users ] = useContext(UsersListContext);\n  const [ loggedInAs ] = useContext(UserContext);\n  const [ selectedProject ] = useState(editingTicket.associatedProject);\n  const [ ticketType, setTicketType ] = useState(editingTicket.ticketType);\n  const [ priority, setPriority ] = useState(editingTicket.priority);\n  const [ userAssigned, setUserAssigned ] = useState(editingTicket.userAssigned);\n  const [ inputMissingState, setInputMissing ] = useState(false);\n  \n  useEffect(() => {\n    const placeHolder = comments.current;\n    placeHolder.addEventListener('change', e => {\n      comments.current = e.target.value;\n    });\n  }, []);\n\n  const callbackFunction = useCallback(() => {\n    let inputMissing = false;\n    //check all fields for valid values\n    if((comments.current === undefined) || (comments.current === \"\") || (typeof(comments.current) === 'object')) {\n      comments.current = `Ticket updated by ${loggedInAs.email}.`;\n    };\n    if((ticketType === undefined) || (ticketType === \"\")) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n    if((priority === undefined) || (priority === \"\")) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n    if((userAssigned === undefined) || (userAssigned === \"\")) {\n      inputMissing = true;\n      setInputMissing(true);\n    }\n\n    if(!inputMissing) {\n      //getting date/time submitted\n      const date = new Date();\n      const currentDate = `${date.getMonth()+1}-${date.getDate()}-${date.getFullYear()}`;\n      let meridiem;\n      let hour;\n      if(date.getHours() > 12) {\n        hour = date.getHours() - 12;\n        meridiem = 'pm';\n      } else { \n        hour = date.getHours()\n        meridiem = 'am';\n      }\n      let minute;\n      if(date.getMinutes() < 10) {\n        minute = `0${date.getMinutes()}`;\n      }  else { \n        minute = date.getMinutes();\n       }\n\n      const currentTime = `${hour}:${minute}${meridiem}`\n      const ticketInfo = {\n        ticketName: ticketName.current.value,\n        description: description.current.value,\n        comments: comments.current,\n        isComplete: tempStatus,\n        associatedProject: selectedProject,\n        ticketType: ticketType,\n        priority: priority,\n        userAssigned: userAssigned,\n        ticketEditor: loggedInAs.email,\n        dateSubmitted: currentDate,\n        timeSubmitted: currentTime\n      };\n      \n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(ticketInfo)\n      };\n\n      fetch('/editTicket', options)\n      .then(() => {\n        fetch('/projects')\n        .then(response => response.json())\n        .then(results => {\n          setProjects(results)        \n        })\n        .catch(err => console.log(err));\n        if((user.accountType === 'Admin') || (user.accountType === 'Project Manager')) {\n          history.push('/tickets');\n        } else {\n          history.push('/myTickets');\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if((user.accountType === 'Admin') || (user.accountType === 'Project Manager')) {\n          history.push('/tickets');\n        } else {\n          history.push('/myTickets')\n        }\n      });\n    } else { history.push('/editTicket') }\n  }, [ selectedProject, ticketType, priority, userAssigned, loggedInAs, history, setProjects, tempStatus, user.accountType ]);\n\n  useEffect(() => {\n    const placeHolder = submit.current;\n    placeHolder.addEventListener('click', callbackFunction);\n    //Prevent multiple event listeners upon state change\n    if(placeHolder !== null) {\n     return (() => {\n      placeHolder.removeEventListener('click', callbackFunction);\n     })\n    }\n  }, [ submit, callbackFunction ]);\n\n  function handleTicketType(event) {\n    setTicketType(event.target.value);\n  };\n  function handlePriority(event) {\n    setPriority(event.target.value);\n  };\n  function handleUserAssigned(event) {\n    setUserAssigned(event.target.value);\n  };\n  function markComplete() {\n    setTempStatus(true);\n  };\n  function reopenTicket() {\n    setTempStatus(false);\n  };\n  function cancelTicket() {\n    if((user.accountType === 'Admin') || (user.accountType === 'Project Manager')) {\n      history.push('/tickets');\n    } else {\n      history.push('/myTickets')\n    };\n  };\n\n  return (\n    <div>\n    <Sidebar />\n    <div className='isCentered2'>\n\n      <div className='formParent wideForm'>\n        \n        <Typography className=\"splashMessage\">\n          <span className=\"splashMessage\">Edit Ticket</span> <br/>\n        </Typography>\n\n        <form id=\"editTicketForm\">\n          <input ref={ticketName} className='inputField' value={editingTicket.ticketName} readOnly/>\n          <input className='inputField' value={editingTicket.associatedProject} readOnly/>\n          <div ref={description} className='inputField wideInputField tallInput'><span className='bold'>Description:</span> {<br/>}{editingTicket.description}</div>\n    \n                <select className='inputField' defaultValue={`${editingTicket.ticketType}`} onChange={handleTicketType}>\n                  <option value=\"\">Ticket Type *</option>\n                  <option value='Bug'>Bug</option>\n                  <option value='Functionality'>Functionality</option>\n                  <option value='Graphical'>Graphical</option>\n                  <option value='Network'>Network</option>\n                  <option value='Compatibility'>Compatibility</option>\n                  <option value='Accessability'>Accessability</option>\n                  <option value='Other'>Other</option>\n                </select>\n\n              \n                <select className='inputField' defaultValue={`${editingTicket.priority}`} onChange={handlePriority}>\n                  <option value=''>Priority *</option>\n                  <option value='Low'>Low</option>\n                  <option value='Medium'>Medium</option>\n                  <option value='High'>High</option>\n                </select>\n\n\n\n              <select className='inputField' defaultValue={`${editingTicket.userAssigned}`} onChange={handleUserAssigned}>\n                <option value=\"\">{editingTicket.userAssigned}</option>\n                <option value=''>User Assigned *</option>\n                {users.map(user => (\n                    <option key={user.email} value={user.email}>{user.email}</option>\n                  ))}\n              </select>\n\n          <input ref={comments} className='inputField' placeholder=\"Comments\"/>\n          \n          <br/>\n          { inputMissingState ? <Typography className='errorMessage'><span>Input is missing, please fill out required forms.</span></Typography> : null }\n          { !tempStatus ?\n            <Button ref={completeButton} onClick={markComplete} className='addNewButton authButton isNotComplete' variant='contained' color='primary'>Mark Complete</Button>\n          :\n            <Button ref={reopenButton} onClick={reopenTicket} className='addNewButton authButton isComplete' variant='contained' color='primary'>Reopen Ticket</Button>\n          }\n            <Button ref={submit} className='addNewButton authButton'variant=\"contained\" color=\"primary\">Save Changes</Button>\n        </form>\n        <Typography className={classes.root}>\n          <Link onClick={cancelTicket}>\n            Cancel\n          </Link>\n        </Typography>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default TicketForm\n","import React from 'react'\nimport { useRef, useEffect, useState, useCallback, useContext } from 'react'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\nimport { useHistory } from 'react-router-dom'\nimport '../Auth.css'\nimport { UsersListContext, EditUserContext } from '../../App'\nimport Sidebar from '../Sidebar'\n\n//Material UI config\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction UserForm() {\n  const classes = useStyles();\n  const [ , setUsersList ] = useContext(UsersListContext);\n  const [ editingUser ] = useContext(EditUserContext);\n  const submit = useRef();\n  const history = useHistory();\n  const [ accountType, setAccountType ] = useState(editingUser.accountType);\n  const [ firstName, setFirstName ] = useState(editingUser.firstName);\n  const [ lastName, setLastName ] = useState(editingUser.lastName);\n  const email = useRef(editingUser.email);\n  const [ password, setPassword ] = useState(null);\n  const canCreateProjects = useRef(false);\n  const canAssignUsers = useRef(false);\n  const [ inputMissingState, setInputMissing ] = useState(false);  \n\n  useEffect(() => {\n    //Assign permissions based on account type\n    switch(accountType) {\n      case 'Admin':\n        canCreateProjects.current = true;\n        canAssignUsers.current = true;\n        break;\n      case 'Project Manager':\n        canCreateProjects.current = false;\n        canAssignUsers.current = true;\n        break;\n      case 'Developer':\n        canCreateProjects.current = false;\n        canAssignUsers.current = false;\n        break;\n      case 'Submitter':\n        canCreateProjects.current = false;\n        canAssignUsers.current = false;\n        break;\n      default:\n        canCreateProjects.current = false;\n        canAssignUsers.current = false;\n        break;\n    }\n  }, [ accountType, setAccountType ]);\n\n  const eventListener = useCallback(() => {\n    //check all fields for valid values\n    let inputMissing = false;\n    if(!accountType) {\n      inputMissing = true;\n      setInputMissing(true);\n    };\n\n    if(!inputMissing) {   \n      const userInfo = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email.current,\n        password: password,\n        accountType: accountType,\n        canCreateProjects: canCreateProjects.current,\n        canAssignUsers: canAssignUsers.current\n      };\n      \n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(userInfo)\n      };\n      fetch('/editUser', options)\n      .then(() => {\n          fetch('/users')\n          .then(response => response.json())\n          .then(results => {\n            setUsersList(results);\n          })\n          .catch(err => console.log(err));\n            history.push('/users');\n          })\n      .catch(err => {\n        console.log(err);\n        history.push('/users');\n      });\n    }\n  }, [ accountType, firstName, lastName, email, password, history, setUsersList ]);\n\n  useEffect(() => {\n    const placeHolder = submit.current;\n    placeHolder.addEventListener('click', eventListener);\n    return () => {\n      //Prevent multiple event listeners upon state change\n      if(placeHolder !== null) {\n        placeHolder.removeEventListener('click', eventListener);\n      }\n    }\n  }, [ submit, eventListener ]);\n\n  function handleFirstName(e) {\n    setFirstName(e.target.value);\n  };\n  function handleLastName(e) {\n    setLastName(e.target.value);\n  };\n  function handleAccountType(e) {\n    setAccountType(e.target.value);\n  };\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  };\n  function deleteUser() {\n    const userBody = {\n      email: editingUser.email\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"Application/JSON\"\n      },\n      body: JSON.stringify(userBody)\n    };\n\n    fetch('/deleteUser', options)\n    .then(() => {\n      fetch('/users')\n      .then(result => result.json())\n      .then(users => {\n        setUsersList(users);\n        history.push('/users');\n      })\n      .catch(err => {\n        console.log(err);\n        history.push('/users');\n      });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  };\n\n  return (\n    <div>\n    <Sidebar />\n    <div className='isCentered2'>\n   \n      <div className='formParent wideForm'>\n\n        <form id=\"editUserForm\">\n          <Typography className='splashMessage'>\n            <span className=\"splashMessage\">Edit User</span> <br/>\n          </Typography>\n\n          <input name='firstName' className='inputField' value={firstName} onChange={handleFirstName}/>\n          <input name='lastName' className='inputField' value={lastName} onChange={handleLastName}/>\n          <input name='email' className='inputField' value={email.current} readOnly/>       \n    \n            <select className='inputField' defaultValue={accountType} onChange={handleAccountType}>\n              <option value=\"\">Account Type *</option>\n              <option value={'Admin'}>Admin</option>\n              <option value={'Project Manager'}>Project Manager</option>\n              <option value={'Developer'}>Developer</option>\n              <option value={'Submitter'}>Submitter</option>\n            </select>\n            <input name='password' className='inputField wideInputField' placeholder=\"New Password (optional)\" onChange={handlePassword}/>  \n            <br/>\n\n            { inputMissingState ? <Typography className='errorMessage'><span>Input is missing, please fill out required forms.</span></Typography> : null }\n          <Button className='addNewButton deleteButton authButton' variant='contained' color='primary' onClick={deleteUser}>Delete User</Button>\n          <Button ref={submit} className='addNewButton authButton' variant=\"contained\" color=\"primary\">Save Changes</Button>\n        </form>\n\n        <Typography className={classes.root}>\n          <Link onClick={() => history.push('/users')}>\n            Cancel\n          </Link>\n        </Typography>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default UserForm\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Sidebar from '../../Sidebar'\nimport { UserContext, UsersListContext } from '../../../App'\nimport '../../Auth.css'\n\nfunction Settings() {\n  const [ user ] = useContext(UserContext);\n  const [ usersList, setUsersList ] = useContext(UsersListContext);\n  const [ passwordTag, setPasswordTag ] = useState('');\n  const [ password, setPassword ] = useState(null);\n  const [ userObject, setUserObject ] = useState(\n    {\n      firstName: user.firstName,\n      lastName: user.lastName   \n    }\n  );\n  const [ changeSuccessful, setSuccessful ] = useState(false);\n  const [ inputMissing, setInputMissing ] = useState(false); \n  const history = useHistory();\n\n  useEffect(() => {\n    usersList.forEach(selectedUser => {\n      if(selectedUser.email === user.email) {\n        setUserObject(\n          {\n            firstName: selectedUser.firstName,\n            lastName: selectedUser.lastName\n          }\n        );\n      };\n    });\n  }, [ user.email, usersList ]);\n\n  function handleFirstName(e) {\n    let tempObject = {\n      firstName: e.target.value,\n      lastName: userObject.lastName\n    }\n    setUserObject(tempObject);\n  };\n  function handleLastName(e) {\n    let tempObject = {\n      firstName: userObject.firstName,\n      lastName: e.target.value\n    }\n    setUserObject(tempObject);\n  };\n  function handlePassword(e) {\n    setPassword(e.target.value);\n    setPasswordTag(e.target.value);\n  };\n  function handleSaveChanges() {\n    let inputMissing = false;\n    if((userObject.firstName === '') || (userObject.lastName === '')) {\n      inputMissing = true;\n      setInputMissing(true);\n    } else {\n      inputMissing = false;\n      setInputMissing(false);\n    }\n\n    if(!inputMissing) {   \n      const userInfo = {\n        firstName: userObject.firstName,\n        lastName: userObject.lastName,\n        email: user.email,\n        password: password,\n      };\n      \n      setPasswordTag('');\n\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(userInfo)\n      };\n      fetch('/editUser', options)\n      .then(() => {\n          fetch('/users')\n          .then(response => response.json())\n          .then(results => {\n            setUsersList(results);\n          })\n          .catch(err => console.log(err));\n            setSuccessful(true);\n            history.push('/settings');\n          })\n      .catch(err => {\n        console.log(err);\n        history.push('/users');\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Sidebar />\n      <div className='settingsParent'>\n        <h1 className='welcomeMessage'>User Settings:</h1>\n      \n        <div>\n\n          <div id='settingsDiv'>            \n            <div className='innerDiv'>\n              First Name: <input className='settingsInput' placeholder='First Name...' value={userObject.firstName} onChange={handleFirstName}/>\n            </div>\n            <div className='innerDiv'>\n              Last Name: <input className='settingsInput' placeholder='Last Name...' value={userObject.lastName} onChange={handleLastName}/>\n            </div>\n            <div className='innerDiv'>\n              Password: <input className='settingsInput' placeholder='New Password...' value={passwordTag} onChange={handlePassword}/>\n            </div>\n            <button className='addNewButton' id='settingsButton' onClick={handleSaveChanges}>Save Changes</button>\n\n            { inputMissing ? \n              <div className='errorMessage'>*First and last name must not be blank*</div>\n            :\n              null\n            }\n\n            { changeSuccessful ? \n              <div><p><b>Changes saved successfully!</b></p></div>\n            :\n              null\n            }\n          </div>\n        \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { ProjectContext, UserContext } from '../../../App'\nimport Sidebar from '../../Sidebar'\nimport DisplayTable from './DisplayTable'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction ProjectTable() {\n  const [ projects ] = useContext(ProjectContext);\n  const [ user ] = useContext(UserContext);\n  const classes = useStyles();\n  const [ rows, setRows ] = useState([]);\n  const [ project, setProject ] = useState(null);\n  const isNull = useRef(true);\n  const [ searchWord, setSearchWord ] = useState('');\n  const [ searchedTicketsArray, setSearchedTicketsArray ] = useState([]);\n\n  useEffect(() => {\n    let tempArray = [];\n    let isUser = false;\n    rows.forEach(row => {\n      if((searchWord !== '') && ((row.name.toUpperCase().includes(searchWord.toUpperCase())) || (isUser))) {\n        tempArray.push(row);\n      };\n    });\n    setSearchedTicketsArray(tempArray);\n  }, [ searchWord, setSearchWord, rows ]);\n\n  function createData( projectName, usersAssigned, ticketLength, completedTickets, id, index ) {\n    return { name: projectName, users: usersAssigned, tickets: ticketLength, completedTickets: completedTickets, projectID: id, projectIndex: index };\n  }\n\n  useEffect(() => {\n    let placeHolder = [];\n    if(projects !== null) {\n      projects.forEach((project, index) => {\n        let completedTickets = 0;\n        project.tickets.forEach(ticket => {\n          if(ticket.isComplete) {\n            completedTickets++;\n          }\n        });\n        project.usersAssigned.forEach(userAssigned => {\n          if(user.email === userAssigned) {\n            placeHolder.push(createData(project.projectName, project.usersAssigned.length, project.tickets.length, completedTickets, project._id, index));\n            setRows(placeHolder);\n          }\n        });\n      })\n    }\n  }, [ projects, user.email ]);\n\n  //For displaying in DisplayTable component\n  function getProject(event) {\n    projects.forEach(element => {\n      if(element._id === event.target.dataset.projectid) {\n        isNull.current = false;\n        setProject(element);\n      };\n    });\n  };\n\n  function handleSearchBar(e) {\n    setSearchWord(e.target.value);\n  };\n\n  return (\n    <div>\n      <Sidebar />\n        <div className='sectionTopBar'>\n          <h2 className='sectionName'>Your Projects</h2>\n          <div id='searchBarDiv'>\n            <input id='searchBar' placeholder='Search...' onChange={handleSearchBar}/>\n          </div>\n        </div>\n      { searchedTicketsArray[0] ? \n        <TableContainer className='tableContainer' component={Paper}>\n        <Table size='medium' className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className='minWidthCell topLeftCell' align='center'>View Details</TableCell>\n              <TableCell className='noWrap greyCell topCell'>Project Name</TableCell>\n              <TableCell className='noWrap topCell' align=\"center\">Users Assigned</TableCell>\n              <TableCell className='noWrap greyCell topCell' align=\"center\">Tickets Completed</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {searchedTicketsArray.map(row => (\n              <TableRow key={row.name}>\n                <TableCell className='tableCell minWidthCell' align='center' component=\"th\" scope=\"row\">\n                  <button className='noWrap viewButton' data-projectid={row.projectID} onClick={event => getProject(event)}>View Project</button>\n                </TableCell>\n                <TableCell className='noWrap greyCell' align=\"left\">{row.name}</TableCell>\n                <TableCell className='noWrap'align=\"center\">{row.users}</TableCell>\n                <TableCell className='noWrap greyCell' align=\"center\">{row.completedTickets}/{row.tickets}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      :\n\n      <TableContainer className='tableContainer' component={Paper}>\n      <Table size='medium' className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className='minWidthCell topLeftCell' align='center'>View Details</TableCell>\n            <TableCell className='noWrap greyCell topCell'>Project Name</TableCell>\n            <TableCell className='noWrap topCell' align=\"center\">Users Assigned</TableCell>\n            <TableCell className='noWrap greyCell topCell' align=\"center\">Tickets Completed</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell className='tableCell minWidthCell' align='center' component=\"th\" scope=\"row\">\n                <button className='noWrap viewButton' data-projectid={row.projectID} onClick={event => getProject(event)}>View Project</button>\n              </TableCell>\n              <TableCell className='noWrap greyCell' align=\"left\">{row.name}</TableCell>\n              <TableCell className='noWrap'align=\"center\">{row.users}</TableCell>\n              <TableCell className='noWrap greyCell' align=\"center\">{row.completedTickets}/{row.tickets}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    }\n\n    <DisplayTable project={project} type='Project' isNull={isNull.current}/>\n    </div>\n  )\n}\n\nexport default ProjectTable\n","import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { ProjectContext, UserContext } from '../../../App'\nimport DisplayTable from './DisplayTable';\nimport Sidebar from '../../Sidebar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(ticketName, project, description, type, priority, user, submitter, comments, isComplete, ticketIndex, projectIndex) {\n  return { ticketName: ticketName, associatedProject: project, description: description, ticketType: type, \n    priority: priority, userAssigned: user, ticketSubmitter: submitter, comments: comments, isComplete: isComplete, ticketIndex: ticketIndex, projectIndex: projectIndex };\n}\n\nfunction TicketTable() {\n  const [ projects ] = useContext(ProjectContext);\n  const [ user ] = useContext(UserContext);\n  const classes = useStyles();\n  const history = useHistory();\n  const [ rows, setRows ] = useState([]);\n  const [ ticket, setTicket ] = useState(null);\n  const [ showCompleted, setShowCompleted ] = useState(false);\n  const isNull = useRef(true);\n  const [ searchWord, setSearchWord ] = useState('');\n  const [ searchedTicketsArray, setSearchedTicketsArray ] = useState([]);\n\n  useEffect(() => {\n    let tempArray = [];\n    if(projects !== null) {\n      projects.forEach((project, projectIndex) => {\n        project.tickets.forEach((ticket, ticketIndex) => {\n          if(user.email === ticket.userAssigned) {\n            tempArray = [ ...tempArray, createData(ticket.ticketName, ticket.associatedProject, ticket.description, ticket.ticketType, ticket.priority, ticket.userAssigned, ticket.ticketSubmitter, ticket.comments, ticket.isComplete, ticketIndex, projectIndex) ];\n            setRows(tempArray);\n          }\n        })\n      });\n    }\n  }, [ projects, user.email ]);\n  \n\n  useEffect(() => {\n    let tempArray = [];\n    rows.forEach(row => {\n      if((searchWord !== '') && ((row.ticketName.toUpperCase().includes(searchWord.toUpperCase())) || \n      ((row.associatedProject.toUpperCase().includes(searchWord.toUpperCase()))) ||\n      ((row.userAssigned.toUpperCase().includes(searchWord.toUpperCase()))) ||\n      ((row.priority.toUpperCase().includes(searchWord.toUpperCase()))))) {\n        tempArray.push(row);\n      };\n    });\n    setSearchedTicketsArray(tempArray);\n  }, [ searchWord, setSearchWord, rows ]);\n\n\n  //for displaying on the DisplayTable component\n  function getTicketByIndex(event) {\n    isNull.current = false;\n    setTicket(projects[event.target.dataset.projectindex].tickets[event.target.dataset.ticketindex]);\n  };\n\n  function handleShowCompleted() {\n    setShowCompleted(!showCompleted);\n  };\n\n  function goToTicketForm() {\n    history.push('/ticketForm');\n  };\n\n  function handleSearchBar(e) {\n    setSearchWord(e.target.value);\n  };\n\n  return (\n    <div>\n      <Sidebar />\n      \n        <div className='sectionTopBar'>\n          <h2 className='sectionName'>Your Tickets</h2>\n          <div id='checkBox'>\n            <input type='checkbox' name='showCompleted' onClick={handleShowCompleted}/>\n            <label>Show Completed</label>\n          </div>\n          <div id='searchBarDiv'>\n            <input id='searchBar' placeholder='Search...' onChange={handleSearchBar}/>\n          </div>\n            <button className='addNewButton'\n            onClick={goToTicketForm}>\n            + Add New Ticket\n            </button>\n        </div>\n\n      { searchedTicketsArray[0] ?\n      <TableContainer className='tableContainer' component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n\n        <TableHead>\n          <TableRow>\n            <TableCell className='noWrap minWidthCell topLeftCell' align=\"center\">View Details</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">Ticket Name</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">Project</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"center\">Priority</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">User Assigned</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding smallCell topCell' align=\"center\">Complete</TableCell>\n          </TableRow>\n        </TableHead>\n        \n        {searchedTicketsArray.map((row) => (\n        <TableBody key={row.ticketName}>\n        { showCompleted ? \n          <TableRow>\n             \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          :\n            null\n          }\n\n          { ((!showCompleted) && (!row.isComplete)) ? \n            <TableRow key={row.ticketName}>\n          \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          : null }\n\n            </TableBody>\n          ))}\n        \n        </Table>\n      </TableContainer>\n      :\n\n      <TableContainer className='tableContainer' component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className='noWrap minWidthCell topLeftCell' align=\"center\">View Details</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"left\">Ticket Name</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">Project</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding topCell' align=\"center\">Priority</TableCell>\n            <TableCell className='noWrap LeftPadding topCell' align=\"left\">User Assigned</TableCell>\n            <TableCell className='greyCell noWrap LeftPadding smallCell topCell' align=\"center\">Complete</TableCell>\n          </TableRow>\n        </TableHead>\n        \n        {rows.map((row) => (\n        <TableBody key={row.ticketName}>\n        { showCompleted ? \n          <TableRow>\n             \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          :\n            null\n          }\n\n          { ((!showCompleted) && (!row.isComplete)) ? \n            <TableRow key={row.ticketName}>\n          \n            <TableCell className='tableCell minWidthCell noWrap' align='center' component=\"th\" scope=\"row\">\n              <button className='viewButton' data-ticketindex={row.ticketIndex} data-projectindex={row.projectIndex} onClick={event => getTicketByIndex(event)}>View Ticket</button>\n            </TableCell>\n\n            <TableCell className='greyCell tableCell noWrap LeftPadding' align=\"left\">{row.ticketName}</TableCell>\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.associatedProject}</TableCell>\n          {row.priority === 'Low' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityLow' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'Medium' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium' align=\"center\">{row.priority}</TableCell>\n          : null }\n          {row.priority === 'High' ? \n            <TableCell className='tableCell noWrap LeftPadding priorityHigh' align=\"center\">{row.priority}</TableCell>\n          : null }\n            <TableCell className='tableCell noWrap LeftPadding' align=\"left\">{row.userAssigned}</TableCell>\n          {row.isComplete ?\n            <TableCell className='tableCell noWrap LeftPadding priorityLow smallCell' align=\"center\">Yes</TableCell>\n          : \n            <TableCell className='tableCell noWrap LeftPadding priorityMedium smallCell' align=\"center\">No</TableCell>\n          }\n            </TableRow>\n          : null }\n\n            </TableBody>\n          ))}\n\n      </Table>\n    </TableContainer>\n    }\n    \n    <DisplayTable ticket={ticket} type={'Ticket'} isNull={isNull.current}/>\n    </div>\n  )\n}\n\nexport default TicketTable\n","import './App.css';\nimport { useState, createContext } from 'react'\nimport Header from './components/Header'\nimport LoginPage from './components/Routes/Auth/LoginPage'\nimport RegisterPage from './components/Routes/Auth/RegisterPage'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Dashboard from './components/Routes/Dashboard'\nimport ProtectedRoute from './components/Routes/Auth/ProtectedRoute'\nimport FourZeroFour from './components/Routes/FourZeroFour'\nimport ProjectTable from './components/Routes/InfoTables/ProjectsTable'\nimport ProjectForm from './components/InputComponents/ProjectForm'\nimport TicketTable from './components/Routes/InfoTables/TicketTable'\nimport TicketForm from './components/InputComponents/TicketForm'\nimport UsersTable from './components/Routes/InfoTables/UsersTable'\nimport UserForm from './components/InputComponents/UserForm'\nimport EditProject from './components/InputComponents/EditProject'\nimport EditTicket from './components/InputComponents/EditTicket'\nimport EditUser from './components/InputComponents/EditUser'\nimport Settings from './components/Routes/Auth/Settings'\nimport EditsModal from './components/Routes/InfoTables/EditsModal'\nimport MyProjects from './components/Routes/InfoTables/MyProjects'\nimport MyTickets from './components/Routes/InfoTables/MyTickets'\n\nexport const UserContext = createContext();\nexport const ProjectContext = createContext();\nexport const UsersListContext = createContext();\nexport const EditProjectContext = createContext();\nexport const EditTicketContext = createContext();\nexport const EditUserContext = createContext();\nexport const EditsHistoryContext = createContext();\n\nfunction App() {\n  const [ user, setUser ] = useState(null);\n  const [ projects, setProjects ] = useState(null);\n  const [ usersList, setUsersList ] = useState(null);\n  const [ editingProject, setEditingProject ] = useState(null);\n  const [ editingTicket, setEditingTicket ] = useState(null);\n  const [ editingUser, setEditingUser ] = useState(null);\n  const [ editsHistory, setEditsHistory ] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <UserContext.Provider value={[ user, setUser ]}>\n        <ProjectContext.Provider value={[ projects, setProjects ]}>\n          <UsersListContext.Provider value={[ usersList, setUsersList ]}>\n            <EditProjectContext.Provider value={[ editingProject, setEditingProject ]}>\n              <EditTicketContext.Provider value={[ editingTicket, setEditingTicket ]}>\n                <EditUserContext.Provider value={[ editingUser, setEditingUser ]}>\n                  <EditsHistoryContext.Provider value={[ editsHistory, setEditsHistory ]}>\n                    <Router>\n                        <Header />\n                        <Switch>\n                          <Route exact path='/'>\n                            <LoginPage />\n                          </Route>\n                          <Route exact path='/register'>\n                          <RegisterPage />\n                          </Route>\n                          <ProtectedRoute exact path='/dashboard' component={Dashboard}/>\n                          <ProtectedRoute exact path='/projects' component={ProjectTable}/>\n                          <ProtectedRoute exact path='/projectForm' component={ProjectForm}/>\n                          <ProtectedRoute exact path='/tickets' component={TicketTable}/>\n                          <ProtectedRoute exact path='/ticketForm' component={TicketForm}/>\n                          <ProtectedRoute exact path='/users' component={UsersTable}/>\n                          <ProtectedRoute exact path='/userForm' component={UserForm}/>\n                          <ProtectedRoute exact path='/editProject' component={EditProject}/>\n                          <ProtectedRoute exact path='/editTicket' component={EditTicket}/>\n                          <ProtectedRoute exact path='/editUser' component={EditUser}/>\n                          <ProtectedRoute exact path='/settings' component={Settings}/>\n                          <ProtectedRoute exact path='/editsModal' component={EditsModal}/>\n                          <ProtectedRoute exact path='/myProjects' component={MyProjects}/>\n                          <ProtectedRoute exact path='/myTickets' component={MyTickets}/>\n                          <Route path=''>\n                            <FourZeroFour />\n                          </Route>\n                        </Switch>            \n                    </Router>\n                  </EditsHistoryContext.Provider>\n                </EditUserContext.Provider>\n              </EditTicketContext.Provider>\n            </EditProjectContext.Provider>\n          </UsersListContext.Provider>\n        </ProjectContext.Provider>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}